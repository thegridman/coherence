# Copyright 2020, 2023, Oracle Corporation and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence CE GitHub Actions CI build.
# ---------------------------------------------------------------------------

name: gRPC Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'
  push:
    branches-ignore:
    - gh-pages
    - p4-integ*
    - last-p4-*
  pull_request:
    types:
      - opened
      - committed
    branches:
    - 'stage11-tests'

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        matrixName:
         - one
         - two
         - three
         - four
         - five
         - six
         - seven
         - eight
         - nine
         - ten
         - eleven
         - twelve
         - thirteen
        include:
          - matrixName: one
            stage: stage10
          - matrixName: two
            stage: stage10
          - matrixName: three
            stage: stage10
          - matrixName: four
            stage: stage10
          - matrixName: five
            stage: stage10
          - matrixName: six
            stage: stage10
          - matrixName: seven
            stage: stage10
          - matrixName: eight
            stage: stage10
          - matrixName: nine
            stage: stage10
          - matrixName: ten
            stage: stage10
          - matrixName: eleven
            stage: stage10
          - matrixName: twelve
            stage: stage10
          - matrixName: thirteen
            stage: stage10

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          ref: stage10-tests

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Print Maven & Java version
      run: mvn -version

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-

      # Run the Verify stages in parallel
    - name: Verify
      timeout-minutes: 120
      shell: bash
      env:
        MAVEN_USER: ${{ secrets.MavenUser }}
        MAVEN_PASSWORD: ${{ secrets.MavenPassword }}
      run: |
        echo "Building and running tests in ${{ matrix.stage }}"
        export DEV_ROOT=$(pwd)
        mvn --file prj/pom.xml --batch-mode -U -e -s .github/maven/settings.xml -P-modules,${{ matrix.stage }} -Doptional -Dcoherence.SkipLargeMemoryTests=true clean install
        mvn --file prj/pom.xml --batch-mode -e -s .github/maven/settings.xml -Pmodules,-coherence,${{ matrix.stage }} -nsu -Doptional -Dcoherence.SkipLargeMemoryTests=true clean install -DskipTests 
        mvn --file prj/pom.xml --batch-mode -e -s .github/maven/settings.xml -Pmodules,-coherence,${{ matrix.stage }} -nsu -Doptional -Dcoherence.SkipLargeMemoryTests=true clean verify -pl test/functional/grpc-client

    # Upload build artifacts for diagnosing failures
    - name: Build Artifacts test logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-output-${{ matrix.matrixName }}
        path: prj/**/target/test-output/**/*
        if-no-files-found: ignore

    - name: Build Artifacts test reports
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: failsafe-surefire-test-reports-${{ matrix.matrixName }}
        path: prj/**/target/*-reports/**/*
        if-no-files-found: ignore
